import json
import random
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–µ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
with open("tracks.json", "r", encoding="utf-8") as f:
    MOODS = json.load(f)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[mood] for mood in MOODS.keys()]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üéß –ü—Ä–∏–≤–µ—Ç! –Ø –≠–º–æ DJ.\n–í—ã–±–µ—Ä–∏ —Å–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∏ —è –ø–æ–¥–±–µ—Ä—É —Ç—Ä–µ–∫!",
        reply_markup=reply_markup
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "ü§ñ *–≠–º–æ DJ* ‚Äì –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–±–∏—Ä–∞–µ—Ç –º—É–∑—ã–∫—É –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!\n\n"
        "üìå *–ö–æ–º–∞–Ω–¥—ã:*\n"
        "/start ‚Äì –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
        "/help ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º! üéµ"
    )
    await update.message.reply_text(help_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–≤—ã–±–æ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è)
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_mood = update.message.text
    if user_mood in MOODS:
        track = random.choice(MOODS[user_mood])
        await update.message.reply_text(
            f"üé≠ *{user_mood}*\nüéµ *{track[0]}*\n{track[1]}",
            parse_mode="Markdown"
        )
    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∏–∂–µ!")

# –°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
app = ApplicationBuilder().token("8190690928:AAG2o10BVhz1d_mLV3zXsqv5hdiKP6aXUxw").build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

app.run_polling()
